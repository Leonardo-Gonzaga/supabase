create table "public"."channels" (
    "id" bigint generated by default as identity not null,
    "inserted_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "slug" text not null,
    "created_by" uuid not null
);


create table "public"."messages" (
    "id" bigint generated by default as identity not null,
    "inserted_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "message" text,
    "user_id" uuid not null,
    "channel_id" bigint not null
);


create table "public"."users" (
    "id" uuid not null,
    "username" text
);


CREATE UNIQUE INDEX channels_pkey ON public.channels USING btree (id);

CREATE UNIQUE INDEX channels_slug_key ON public.channels USING btree (slug);

CREATE UNIQUE INDEX messages_pkey ON public.messages USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."channels" add constraint "channels_pkey" PRIMARY KEY using index "channels_pkey";

alter table "public"."messages" add constraint "messages_pkey" PRIMARY KEY using index "messages_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."channels" add constraint "channels_created_by_fkey" FOREIGN KEY (created_by) REFERENCES users(id) not valid;

alter table "public"."channels" validate constraint "channels_created_by_fkey";

alter table "public"."channels" add constraint "channels_slug_key" UNIQUE using index "channels_slug_key";

alter table "public"."messages" add constraint "messages_channel_id_fkey" FOREIGN KEY (channel_id) REFERENCES channels(id) ON DELETE CASCADE not valid;

alter table "public"."messages" validate constraint "messages_channel_id_fkey";

alter table "public"."messages" add constraint "messages_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) not valid;

alter table "public"."messages" validate constraint "messages_user_id_fkey";


